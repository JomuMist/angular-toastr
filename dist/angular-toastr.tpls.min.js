!function(){"use strict";function t(t,e,s,n,o,a,r){function i(t){if(1!==arguments.length||t)if(t)g(t.toastId);else for(var e=0;e<w.length;e++)g(w[e].toastId)}function l(t,e,s){var n=m().iconClasses.error;return d(n,t,e,s)}function c(t,e,s){var n=m().iconClasses.info;return d(n,t,e,s)}function u(t,e,s){var n=m().iconClasses.success;return d(n,t,e,s)}function p(t,e,s){var n=m().iconClasses.warning;return d(n,t,e,s)}function g(e,s){function n(t){for(var e=0;e<w.length;e++)if(w[e].toastId===t)return w[e]}function o(){return!w.length}var i=n(e);i&&!i.deleting&&(i.deleting=!0,i.isOpened=!1,t.leave(i.el,function(){i.scope.options.onHidden&&i.scope.options.onHidden(!!s,i),i.scope.$destroy();var t=w.indexOf(i);delete T[i.scope.message],w.splice(t,1);var e=a.maxOpened;e&&w.length>=e&&w[e-1].open.resolve(),o()&&(h.remove(),h=null,B=r.defer())}))}function d(t,e,s,n){return angular.isObject(s)&&(n=s,s=null),v({iconClass:t,message:e,optionsOverride:n,title:s})}function m(){return angular.extend({},a)}function f(e){if(h)return B.promise;h=angular.element("<div></div>"),h.attr("id",e.containerId),h.addClass(e.positionClass),h.css({"pointer-events":"auto"});var s=angular.element(document.querySelector(e.target));if(!s||!s.length)throw"Target for toasts doesn't exist";return t.enter(h,s,null,function(){B.resolve()}),B.promise}function v(s){function a(){return d.autoDismiss&&d.maxOpened&&w.length>d.maxOpened}function i(t,e,s){function n(e){return s[e]?function(){s[e](t)}:void 0}s.allowHtml?(t.scope.allowHtml=!0,t.scope.title=o.trustAsHtml(e.title),t.scope.message=o.trustAsHtml(e.message)):(t.scope.title=e.title,t.scope.message=e.message),t.scope.toastType=t.iconClass,t.scope.toastId=t.toastId,t.scope.extraData=s.extraData,t.scope.options={extendedTimeOut:s.extendedTimeOut,messageClass:s.messageClass,onHidden:s.onHidden,onShown:n("onShown"),onTap:n("onTap"),progressBar:s.progressBar,tapToDismiss:s.tapToDismiss,timeOut:s.timeOut,titleClass:s.titleClass,toastClass:s.toastClass},s.closeButton&&(t.scope.options.closeHtml=s.closeHtml)}function l(){function t(t){for(var e=["containerId","iconClasses","maxOpened","newestOnTop","positionClass","preventDuplicates","preventOpenDuplicates","templates"],s=0,n=e.length;n>s;s++)delete t[e[s]];return t}var e={toastId:C++,isOpened:!1,scope:n.$new(),open:r.defer()};return e.iconClass=s.iconClass,s.optionsOverride&&(angular.extend(d,t(s.optionsOverride)),e.iconClass=s.optionsOverride.iconClass||e.iconClass),i(e,s,d),e.el=c(e.scope),e}function c(t){var s=angular.element("<div toast></div>"),n=e.get("$compile");return n(s)(t)}function u(){return d.maxOpened&&w.length<=d.maxOpened||!d.maxOpened}function p(){var t=d.preventDuplicates&&s.message===O,e=d.preventOpenDuplicates&&T[s.message];return t||e?!0:(O=s.message,T[s.message]=!0,!1)}var d=m();if(!p()){var v=l();if(w.push(v),a())for(var B=w.slice(0,w.length-d.maxOpened),b=0,x=B.length;x>b;b++)g(B[b].toastId);return u()&&v.open.resolve(),v.open.promise.then(function(){f(d).then(function(){if(v.isOpened=!0,d.newestOnTop)t.enter(v.el,h,null,function(){v.scope.init()});else{var e=h[0].lastChild?angular.element(h[0].lastChild):null;t.enter(v.el,h,e,function(){v.scope.init()})}})}),v}}var h,C=0,w=[],O="",T={},B=r.defer(),b={clear:i,error:l,info:c,remove:g,success:u,warning:p};return b}angular.module("toastr",[]).factory("toastr",t),t.$inject=["$animate","$injector","$document","$rootScope","$sce","toastrConfig","$q"]}(),function(){"use strict";angular.module("toastr").constant("toastrConfig",{allowHtml:!1,autoDismiss:!1,closeButton:!1,closeHtml:"<button>&times;</button>",containerId:"toast-container",extendedTimeOut:1e3,iconClasses:{error:"toast-error",info:"toast-info",success:"toast-success",warning:"toast-warning"},maxOpened:0,messageClass:"toast-message",newestOnTop:!0,onHidden:null,onShown:null,onTap:null,positionClass:"toast-top-right",preventDuplicates:!1,preventOpenDuplicates:!1,progressBar:!1,tapToDismiss:!0,target:"body",templates:{toast:'<div class="{{toastClass}} {{toastType}}" ng-click="tapToast()">  <div ng-switch on="allowHtml">    <div ng-switch-default ng-if="title" class="{{titleClass}}" aria-label="{{title}}">{{title}}</div>    <div ng-switch-default class="{{messageClass}}" aria-label="{{message}}">{{message}}</div>    <div ng-switch-when="true" ng-if="title" class="{{titleClass}}" ng-bind-html="title"></div>    <div ng-switch-when="true" class="{{messageClass}}" ng-bind-html="message"></div>  </div>  <progress-bar ng-if="progressBar"></progress-bar></div>',progressbar:'<div class="toast-progress"></div>'},timeOut:5e3,titleClass:"toast-title",toastClass:"toast"})}(),function(){"use strict";function t(t){function e(t,e,s,n){function o(){var t=(i-(new Date).getTime())/r*100;e.css("width",t+"%")}var a,r,i;n.progressBar=t,t.start=function(t){a&&clearInterval(a),r=parseFloat(t),i=(new Date).getTime()+r,a=setInterval(o,10)},t.stop=function(){a&&clearInterval(a)},t.$on("$destroy",function(){clearInterval(a)})}return{replace:!0,require:"^toast",template:function(){return t.templates.progressbar},link:e}}angular.module("toastr").directive("progressBar",t),t.$inject=["toastrConfig"]}(),function(){"use strict";function t(){this.progressBar=null,this.startProgressBar=function(t){this.progressBar&&this.progressBar.start(t)},this.stopProgressBar=function(){this.progressBar&&this.progressBar.stop()}}angular.module("toastr").controller("ToastController",t)}(),function(){"use strict";function t(t,e,s,n){function o(s,o,a,r){function i(t){return r.startProgressBar(t),e(function(){r.stopProgressBar(),n.remove(s.toastId)},t,1)}function l(){s.progressBar=!1,r.stopProgressBar()}function c(){return s.options.closeHtml}var u;if(s.toastClass=s.options.toastClass,s.titleClass=s.options.titleClass,s.messageClass=s.options.messageClass,s.progressBar=s.options.progressBar,c()){var p=angular.element(s.options.closeHtml),g=t.get("$compile");p.addClass("toast-close-button"),p.attr("ng-click","close(true, $event)"),g(p)(s),o.prepend(p)}s.init=function(){s.options.timeOut&&(u=i(s.options.timeOut)),s.options.onShown&&s.options.onShown()},o.on("mouseenter",function(){l(),u&&e.cancel(u)}),s.tapToast=function(){angular.isFunction(s.options.onTap)&&s.options.onTap(),s.options.tapToDismiss&&s.close(!0)},s.close=function(t,e){e&&angular.isFunction(e.stopPropagation)&&e.stopPropagation(),n.remove(s.toastId,t)},o.on("mouseleave",function(){(0!==s.options.timeOut||0!==s.options.extendedTimeOut)&&(s.$apply(function(){s.progressBar=s.options.progressBar}),u=i(s.options.extendedTimeOut))})}return{replace:!0,template:function(){return s.templates.toast},controller:"ToastController",link:o}}angular.module("toastr").directive("toast",t),t.$inject=["$injector","$interval","toastrConfig","toastr"]}(),angular.module("toastr").run(["$templateCache",function(t){t.put("directives/progressbar/progressbar.html",'<div class="toast-progress"></div>\n'),t.put("directives/toast/toast.html",'<div class="{{toastClass}} {{toastType}}" ng-click="tapToast()">\n  <div ng-switch on="allowHtml">\n    <div ng-switch-default ng-if="title" class="{{titleClass}}" aria-label="{{title}}">{{title}}</div>\n    <div ng-switch-default class="{{messageClass}}" aria-label="{{message}}">{{message}}</div>\n    <div ng-switch-when="true" ng-if="title" class="{{titleClass}}" ng-bind-html="title"></div>\n    <div ng-switch-when="true" class="{{messageClass}}" ng-bind-html="message"></div>\n  </div>\n  <progress-bar ng-if="progressBar"></progress-bar>\n</div>\n')}]);